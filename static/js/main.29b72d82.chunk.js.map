{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/FilterContacts/FilterContacts.module.css","Redux/Reducers.js","Redux/Store.js","Redux/Actions.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/FilterContacts/FilterContacts.js","App.js","reportWebVitals.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","items","createReducer","id","name","number","ADD_CONTACT","state","payload","some","item","alert","DELETE_CONTACT","filter","FILTER_CONTACT","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","contacts","contactsReduсer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","onAdd","createAction","text","uuid","onRemove","onChange","INITIAL_STATE","ContactForm","handleChangeForm","target","value","setState","handleFormSubmit","event","preventDefault","props","onSubmit","resetForm","this","className","s","form","type","pattern","title","required","placeholder","Component","connect","dispatch","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","length","map","contact_span","button","onClick","input","App","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","getState","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.29b72d82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__18HOM\",\"title\":\"App_title__24nlL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1tTvl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FilterContacts_input__2euHf\"};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst INITIAL_STATE = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n];\n\nconst items = createReducer(INITIAL_STATE, {\n  ADD_CONTACT: (state, { payload }) => {\n    const isNotUniqueContact = state.some(item => item.name === payload.name);\n    if (!isNotUniqueContact) {\n      return [...state, payload];\n    } else {\n      alert('Contact is already exist');\n      return state;\n    }\n  },\n  DELETE_CONTACT: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n});\n\nconst filter = createReducer('', {\n  FILTER_CONTACT: (_, { payload }) => payload,\n});\n\n// const items = (\n//   state = [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   ],\n//   { type, payload },\n// ) => {\n//   switch (type) {\n//     case 'ADD_CONTACT':\n//       const isNotUniqueContact = state.some(item => item.name === payload.name);\n//       if (!isNotUniqueContact) {\n//         return [...state, payload];\n//       } else {\n//         alert('Contact is already exist');\n//         return state;\n//       }\n\n//     case 'DELETE_CONTACT':\n//   return state.filter(({ id }) => id !== payload);\n// //    [state.filter(item => item.id !== payload)];\n// // (state.contacts.items: state?.contacts.items.filter(item => item.id !== id)),\n\n//     default:\n//       return state;\n//   }\n// };\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case 'FILTER_CONTACT':\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReduсer from './Reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({ contacts: contactsReduсer });\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// function saveToLocalStorage(state) {\n//   try {\n//     const serialisedState = JSON.stringify(state);\n//     localStorage.setItem('contacts', serialisedState);\n//   } catch (e) {\n//     console.warn(e);\n//   }\n// }\n\n// function loadFromLocalStorage() {\n//   try {\n//     const serialisedState = localStorage.getItem('contacts');\n//     if (serialisedState === null) return undefined;\n//     return JSON.parse(serialisedState);\n//   } catch (e) {\n//     console.warn(e);\n//     return undefined;\n//   }\n// }\n\n// const rootReduсer = combineReducers({\n//   contacts: contactsReduсer,\n// });\n\nexport const store = configureStore(\n  {\n    reducer: persistedReducer,\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n  },\n\n  //   loadFromLocalStorage(),\n  //   composeWithDevTools(),\n);\n\n// const store = createStore(\n//   rootReduсer,\n//   loadFromLocalStorage(),\n//   composeWithDevTools(),\n// );\n// store.subscribe(() => saveToLocalStorage(store.getState()));\n\nexport const persistor = persistStore(store);\n\n// export default { store, persistor };\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nexport const onAdd = createAction('ADD_CONTACT', text => ({\n  payload: {\n    id: uuid(),\n    name: text.name,\n    number: text.number,\n  },\n}));\n\n// export const onAdd = text => {\n//   return {\n//     type: 'ADD_CONTACT',\n//     payload: {\n//       id: uuid(),\n//       name: text.name,\n//       number: text.number,\n//     },\n//   };\n// };\n\nexport const onRemove = createAction('DELETE_CONTACT');\n\n// export const onRemove = id => {\n//   return {\n//     type: 'DELETE_CONTACT',\n//     payload: id,\n//   };\n// };\n\nexport const onChange = createAction('FILTER_CONTACT');\n\n// export const onChange = value => {\n//   return {\n//     type: 'FILTER_CONTACT',\n//     payload: value,\n//   };\n// };\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { onAdd } from '../../Redux/Actions';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={this.handleChangeForm}\n        />\n\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={this.handleChangeForm}\n        />\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: text => dispatch(onAdd(text)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport { onRemove } from '../../Redux/Actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\n// const ContactsListItem = ({ id, name, phone, onRemove }) => {\n//   return (\n//     <li className={s.contact}>\n//       {name}: {phone} <button onClick={() => onRemove(id)}>Delete</button>\n//     </li>\n//   );\n// };\n\nconst ContactsList = ({ items, onRemove }) => {\n  if (items.length === 0) return null;\n  return (\n    <ul>\n      {items.map(item => (\n        <li key={item.id} className={s.contact}>\n          <span className={s.contact_span}>{item.name}</span>{' '}\n          <span className={s.contact_span}>{item.number}</span>\n          <button className={s.button} onClick={() => onRemove(item.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n      {/* {items.map(item => ( \n        <ContactsListItem key={uuid()} {...items} onRemove={onRemove} />\n      ))} */}\n    </ul>\n  );\n};\n\nconst getVisibleContacts = (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  items: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(onRemove(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n\nContactsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onRemove: PropTypes.func,\n};\n","import { connect } from 'react-redux';\nimport { onChange } from '../../Redux/Actions';\nimport PropTypes from 'prop-types';\nimport s from './FilterContacts.module.css';\n\nconst FilterContacts = ({ filter, onChange }) => {\n  return (\n    <input\n      className={s.input}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={onChange}\n      // onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Search contact\"\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: ({ target }) => dispatch(onChange(target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContacts);\n\nFilterContacts.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { Component } from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport FilterContacts from './components/FilterContacts/FilterContacts';\nimport s from './App.module.css';\n\nexport default class App extends Component {\n  // state = {\n  //   contacts: [\n  //     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //   ],\n  //   filter: '',\n  // };\n\n  // handleAddContact = newContact =>\n  //   this.setState(({ contacts }) => ({\n  //     contacts: [...contacts, newContact],\n  //   }));\n\n  // handleFormSubmit = event => {\n  //   event.preventDefault();\n  //   const { name, phone } = this.state;\n  //   const { onAdd } = this.props;\n  //   const isValidatedForm = this.validateForm();\n  //   if (!isValidatedForm) return;\n  //   onAdd({ id: uuid(), name, phone });\n  //   this.props.onSubmit(this.state);\n  //   this.resetForm();\n  // };\n\n  // handleRemoveContacts = id =>\n  //   this.setState(({ contacts }) => ({\n  //     contacts: contacts.filter(contact => contact.id !== id),\n  //   }));\n\n  // handleFilterChange = filter => this.setState({ filter });\n\n  // getVisibleContacts = () => {\n  //   const { contacts, filter } = this.state;\n  //   return contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filter.toLowerCase()),\n  //   );\n  // };\n\n  // componentDidMount() {\n  //   if (localStorage.getItem('contacts') !== null) {\n  //     this.setState({ contacts: JSON.parse(localStorage.getItem('contacts')) });\n  //   }\n  // }\n\n  // componentDidUpdate(prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  render() {\n    // const { filter } = this.state;\n    // const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className={s.container}>\n        <h2 className={s.title}>Contact form</h2>\n\n        <ContactForm\n        // onAdd={this.handleAddContact}\n        // onCheckUnique={this.handleCheckUniqueName}\n        />\n\n        <h2 className={s.title}>Contact list</h2>\n\n        <FilterContacts\n        // filter={filter} onChange={this.handleFilterChange}\n        />\n\n        <ContactsList\n        // items={}\n        // contacts={visibleContacts}\n        // onRemove={this.handleRemoveContacts}\n        />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './Redux/Store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsList_contact__1iZEA\",\"contact_span\":\"ContactsList_contact_span__svrWr\"};"],"sourceRoot":""}